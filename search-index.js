var searchIndex = JSON.parse('{\
"net":{"doc":"","i":[[0,"url","net","module url parses URLs and implements query escaping.",null,null],[3,"URL","net::url","A URL represents a parsed URL (technically, a URI…",null,null],[12,"force_query","","append a query (\'?\') even if `raw_query` is empty",0,null],[12,"fragment","","fragment for references, without \'#\'",0,null],[12,"host","","host or host:port",0,null],[12,"path","","path (relative paths may omit leading slash)",0,null],[12,"opaque","","encoded opaque data",0,null],[12,"raw_fragment","","encoded fragment hint (see escaped_fragment method)",0,null],[12,"raw_path","","encoded path hint (see escaped_path method)",0,null],[12,"raw_query","","encoded query values, without \'?\'",0,null],[12,"scheme","","",0,null],[12,"user","","username and password information",0,null],[3,"UserInfo","","The Userinfo type is an immutable encapsulation of…",null,null],[12,"name","","",1,null],[12,"password","","",1,null],[3,"Values","","Values maps a string key to a list of values. It is…",null,null],[12,"0","","",2,null],[5,"path_escape","","path_escape escapes the string so it can be safely placed…",null,[[],["string",3]]],[5,"path_unescape","","path_unescape does the inverse transformation of…",null,[[],[["result",4],["string",3],["error",4]]]],[5,"query_escape","","query_escape escapes the string so it can be safely placed…",null,[[],["string",3]]],[5,"query_unescape","","query_unescape does the inverse transformation of…",null,[[],[["result",4],["string",3],["error",4]]]],[5,"parse","","parse parses rawurl into a URL structure.",null,[[],[["error",4],["result",4],["url",3]]]],[5,"parse_request_uri","","parse_request_uri parses rawurl into a URL structure. It…",null,[[],[["error",4],["result",4],["url",3]]]],[5,"user","","user returns a Userinfo containing the provided name and…",null,[[],["userinfo",3]]],[5,"user_password","","user_password returns a Userinfo containing the provided…",null,[[],["userinfo",3]]],[5,"parse_query","","parse_query parses the URL-encoded query string and…",null,[[],[["result",4],["values",3]]]],[11,"escaped_fragment","","`escaped_fragment` returns the escaped form of…",0,[[],["string",3]]],[11,"escaped_path","","escaped_path returns the escaped form of self.path. In…",0,[[],["string",3]]],[11,"hostname","","hostname returns self.host, stripping any valid port…",0,[[]]],[11,"is_abs","","is_abs reports whether the URL is absolute. Absolute means…",0,[[]]],[11,"parse","","parse parses a URL in the context of the receiver. The…",0,[[],[["result",4],["error",4]]]],[11,"port","","port returns the port part of self.host, without the…",0,[[]]],[11,"query","","query parses raw_query and returns the corresponding…",0,[[],["values",3]]],[11,"redacted","","redacted is like to_string() but replaces any password…",0,[[],["string",3]]],[11,"request_uri","","request_uri returns the encoded path?query or opaque?query…",0,[[],["string",3]]],[11,"resolve_reference","","resolve_reference resolves a URI reference to an absolute…",0,[[]]],[11,"add","","add adds the value to key. It appends to any existing…",2,[[]]],[11,"del","","del deletes the values associated with key.",2,[[]]],[11,"encode","","encode encodes the values into \\\"URL encoded\\\" form…",2,[[],["string",3]]],[11,"get","","get gets the first value associated with the given key. If…",2,[[],["option",4]]],[11,"set","","set sets the key to value. It replaces any existing values.",2,[[]]],[0,"errors","","module errors define errors about URL operations",null,null],[4,"Error","net::url::errors","Error define errors about URL operations",null,null],[13,"Escape","","",3,null],[13,"InvalidHost","","",3,null],[13,"Misc","","",3,null],[13,"Wrapped","","Wrapped reports an error and the operation and URL that…",3,null],[12,"op","net::url::errors::Error","",4,null],[12,"url","","",4,null],[12,"err","","",4,null],[5,"new_misc","net::url::errors","",null,[[],["error",4]]],[5,"wrap","","",null,[[["error",4]],["error",4]]],[11,"from","net::url","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","net::url::errors","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","net::url","",0,[[],["url",3]]],[11,"clone","","",1,[[],["userinfo",3]]],[11,"default","","",0,[[],["url",3]]],[11,"default","","",1,[[],["userinfo",3]]],[11,"default","","",2,[[],["values",3]]],[11,"eq","","",0,[[["url",3]]]],[11,"ne","","",0,[[["url",3]]]],[11,"eq","","",1,[[["userinfo",3]]]],[11,"ne","","",1,[[["userinfo",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","net::url::errors","",3,[[["formatter",3]],["result",6]]],[11,"fmt","net::url","`fmt` reassembles the URL into a valid URL string. The…",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","net::url::errors","",3,[[["formatter",3]],["result",6]]],[11,"serialize","net::url","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]]],"p":[[3,"URL"],[3,"UserInfo"],[3,"Values"],[4,"Error"],[13,"Wrapped"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);